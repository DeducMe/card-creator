{"version":3,"sources":["reducers/options.js","reducers/reducer.js","components/MainCard.js","components/OptionsSide/AddBtn/AddBtn.js","components/OptionsSide/OptionsSide.js","App.js","index.js"],"names":["initialState","combineReducers","options","state","action","type","generalOptions","payload","emptyHeader","color","value","header","emptyDescription","description","buttons","push","Object","assign","splice","length","index","data","image","useStyles","makeStyles","root","props","width","Number","contentWidth","height","contentHeight","media","minWidth","imageWidth","imageHeight","nullifyPadding","padding","flex","display","rowReverse","flexDirection","columnReverse","connect","optionsState","dispatch","classes","styles","console","log","ContentActionArea","contentActive","CardActionArea","Box","ImageActionArea","imageActive","Card","className","clsx","contentFlex","contentInvert","CardMedia","CardContent","Typography","gutterBottom","variant","component","CardActions","map","item","Button","size","theme","optionsFab","position","bottom","spacing","marginLeft","AddDialog","onClose","selectedValue","open","actions","onAddHeader","onAddDescription","onAddButtons","React","useState","disabledHeader","setDisabledHeader","disabledDescription","setDisabledDescription","disabledButtons","setDisabledButtons","handleListItemClick","useEffect","Dialog","aria-labelledby","DialogTitle","id","List","ListItem","disabled","autoFocus","button","onClick","ListItemText","primary","setOpen","setSelectedValue","Fab","aria-label","optionsSide","handleGeneralOptionsCheckBoxChange","event","setState","target","name","checked","handleGeneralOptionsSave","handleGeneralOptionsStylesChange","styleName","styleValue","e","onChangeGeneralOptions","handleHeaderChange","handleDescriptionChange","handleButtonChange","newState","handleHeaderSave","onChangeHeader","handleDescriptionSave","onChangeDescription","handleButtonSave","onChangeButton","loadImage","file","URL","createObjectURL","onChangeImage","handleImageLoad","files","dragOver","preventDefault","dragEnter","dragLeave","handleFileDrop","dataTransfer","handleDeleteImage","FormControlLabel","control","Checkbox","this","onChange","bind","label","TextField","fullWidth","Divider","Accordion","AccordionSummary","expandIcon","stopPropagation","onFocus","placeholder","margin","InputLabelProps","shrink","AccordionDetails","AccordionActions","onDeleteButton","IconButton","onAddButton","onDeleteHeader","multiline","onDeleteDescription","onDragOver","onDragEnter","onDragLeave","onDrop","accept","hidden","htmlFor","handleSaveImage","Component","App","OptionsSide","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById"],"mappings":"8PAAMA,EAAe,GCINC,kBAAgB,CAC3BC,QDDW,WAA+C,IAA9BC,EAA6B,uDAArBH,EAAcI,EAAO,uCACzD,GAAoB,2BAAhBA,EAAOC,KAEP,OADAF,EAAMG,eAAiBF,EAAOG,QACvB,eACJJ,GAGP,GAAoB,eAAhBC,EAAOC,KAAsB,CAC7B,IAAMG,EAAc,CAChBC,MAAM,OACNC,MAAM,IAKV,OAFAP,EAAMQ,OAASH,EAER,eACJL,GAGP,GAAoB,kBAAhBC,EAAOC,KAGP,OAFAF,EAAMQ,OAAS,KAER,eACJR,GAGP,GAAoB,kBAAhBC,EAAOC,KAGP,OAFAF,EAAMQ,OAASP,EAAOG,QAEf,eACJJ,GAGP,GAAoB,oBAAhBC,EAAOC,KAA2B,CAClC,IAAMO,EAAmB,CACrBH,MAAM,YACNC,MAAM,IAKV,OAFAP,EAAMU,YAAcD,EAEb,eACJT,GAGP,GAAoB,uBAAhBC,EAAOC,KAGP,OAFAF,EAAMU,YAAc,KAEb,eACJV,GAGP,GAAoB,uBAAhBC,EAAOC,KAEP,OADAF,EAAMU,YAAcT,EAAOG,QACpB,eACJJ,GAKP,GAAoB,eAAhBC,EAAOC,KAAsB,CAC7B,IAAMG,EAAc,CAChBE,MAAM,IAMV,OAJAP,EAAMW,QAAUX,EAAMW,QAAQC,KAAKP,GAAeL,EAAMW,QAAU,CAACN,GAEnEL,EAAQa,OAAOC,OAAO,GAAId,EAAlBa,OAAA,IAAAA,CAAA,GAA6Bb,IAE9B,eACJA,GAGP,MAAoB,kBAAhBC,EAAOC,MACPF,EAAMW,QAAQI,OAAOd,EAAOG,QAAS,GACR,IAAzBJ,EAAMW,QAAQK,cACPhB,EAAMW,QAEZX,EAAMW,QAAUE,OAAOC,OAAO,GAAId,EAAMW,QAAxBE,OAAA,IAAAA,CAAqCb,EAAMW,UAEzD,eACJX,IAIa,kBAAhBC,EAAOC,MACPF,EAAMW,QAAQV,EAAOG,QAAQa,OAAShB,EAAOG,QAAQc,KACrDlB,EAAQa,OAAOC,OAAO,GAAId,EAAlBa,OAAA,IAAAA,CAAA,GAA6Bb,IAE9B,eACJA,IAGa,iBAAhBC,EAAOC,MACPF,EAAMmB,MAAQlB,EAAOG,QACd,eACJJ,IAIAA,K,+GEzFLoB,EAAYC,YAAW,CACzBC,KAAM,SAAAC,GAAK,MAAK,CACZC,MAAOC,OAAOF,EAAMG,cACpBC,OAAQF,OAAOF,EAAMK,iBAEzBC,MAAO,SAAAN,GAAK,MAAK,CACbO,SAAS,OACTN,MAAOC,OAAOF,EAAMQ,YACpBJ,OAAQF,OAAOF,EAAMS,eAEzBC,eAAe,CACXC,QAAQ,GAEZC,KAAK,CACDC,QAAQ,QAEZC,WAAW,CACPC,cAAc,eAElBC,cAAc,CACVH,QAAQ,OACRE,cAAc,oBAuDtB,IAYeE,eAZS,SAACxC,GACrB,MAAO,CACHyC,aAAazC,EAAMD,YAIA,SAAC2C,GACxB,MAAM,KAKKF,EA9Df,YAAmC,IAAD,YAAfC,EAAe,EAAfA,aACTE,EAAUvB,EAAS,UAACqB,EAAatC,sBAAd,aAAC,EAA6ByC,QACvDC,QAAQC,IAAIH,GACZ,IAAMI,GAAoB,UAAAN,EAAatC,sBAAb,eAA6B6C,eAAgBC,IAAiBC,IAClFC,GAAkB,UAAAV,EAAatC,sBAAb,eAA6BiD,aAAcH,IAAiBC,IAEpF,OACI,eAACG,EAAA,EAAD,CAAMC,UAAWX,EAAQrB,KAAzB,UACI,eAACyB,EAAD,CAAmBO,UAAWC,YAC1BZ,EAAQV,gBACR,UAAAQ,EAAatC,sBAAb,eAA6BqD,aAAcb,EAAQR,KAAO,IAC1D,UAAAM,EAAatC,sBAAb,eAA6BsD,gBAC7B,UAAAhB,EAAatC,sBAAb,eAA6BqD,aAAcb,EAAQN,WAAaM,EAAQJ,cAAgB,IAJ5F,UAMKE,EAAatB,MACV,cAACgC,EAAD,UACI,cAACO,EAAA,EAAD,CACIJ,UAAWX,EAAQd,MACnBV,MAAOsB,EAAatB,UAG9B,GACF,eAACwC,EAAA,EAAD,WACKlB,EAAajC,OACd,cAACoD,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACKtB,EAAajC,OAAOD,QAEvB,GAEDkC,EAAa/B,YACd,cAACkD,EAAA,EAAD,CAAYE,QAAQ,QAAQxD,MAAM,gBAAgByD,UAAU,IAA5D,SACKtB,EAAa/B,YAAYH,QAE5B,SAITkC,EAAa9B,QACV,cAACqD,EAAA,EAAD,UACKvB,EAAa9B,QAAQsD,KAAI,SAACC,EAAMjD,GAC7B,OAAO,cAACkD,EAAA,EAAD,CAAoBC,KAAK,QAAQ9D,MAAM,UAAvC,SACF4D,EAAK3D,OADUU,QAK1B,S,kOCxEZG,EAAYC,aAAW,SAACgD,GAAD,MAAY,CACrCC,WAAW,CACPC,SAAU,QACVC,OAAQH,EAAMI,QAAQ,GACtBC,WAAYL,EAAMI,QAAQ,QAKlC,SAASE,EAAUpD,GACf,IAAQqD,EAA+CrD,EAA/CqD,QAASC,EAAsCtD,EAAtCsD,cAAeC,EAAuBvD,EAAvBuD,KAAMrC,EAAiBlB,EAAjBkB,aACtC,EAAsDlB,EAAMwD,QAArDC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,iBAAkBC,EAAtC,EAAsCA,aAEtC,EAA4CC,IAAMC,UAAS,GAA3D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsDH,IAAMC,UAAS,GAArE,mBAAOG,EAAP,KAA4BC,EAA5B,KACA,EAA8CL,IAAMC,UAAS,GAA7D,mBAAOK,EAAP,KAAwBC,EAAxB,KAMMC,EAAsB,SAACpF,GACzB,OAAQA,GACJ,IAAK,SACDyE,IACAM,GAAkB,GAClB,MACJ,IAAK,cACDL,IACAO,GAAuB,GACvB,MACJ,IAAK,UACDN,IACAQ,GAAmB,KAa/B,OANAE,qBAAU,WACNnD,EAAajC,OAAS8E,GAAkB,GAAQA,GAAkB,GAClE7C,EAAa/B,YAAc8E,GAAuB,GAAQA,GAAuB,GACjF/C,EAAa9B,QAAU+E,GAAmB,GAAQA,GAAmB,KACvE,CAACjD,IAGC,eAACoD,EAAA,EAAD,CAAQjB,QA9BQ,WAChBA,EAAQC,IA6BsBiB,kBAAgB,sBAAsBhB,KAAMA,EAA1E,UACI,cAACiB,EAAA,EAAD,CAAaC,GAAG,sBAAhB,2BACA,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAUC,SAAUd,EAAgBe,WAAS,EAACC,QAAM,EAACC,QAAS,kBAAMX,EAAoB,WAAxF,UACI,cAAC,IAAD,IACA,cAACY,EAAA,EAAD,CAAcC,QAAQ,kBAE1B,eAACN,EAAA,EAAD,CAAUC,SAAUZ,EAAqBa,WAAS,EAACC,QAAM,EAACC,QAAS,kBAAMX,EAAoB,gBAA7F,UACI,cAAC,IAAD,IACA,cAACY,EAAA,EAAD,CAAcC,QAAQ,uBAE1B,eAACN,EAAA,EAAD,CAAUC,SAAUV,EAAiBW,WAAS,EAACC,QAAM,EAACC,QAAS,kBAAMX,EAAoB,YAAzF,UACI,cAAC,IAAD,IACA,cAACY,EAAA,EAAD,CAAcC,QAAQ,yBA+B1C,IAoBehE,gBApBS,SAACxC,GACrB,MAAO,CACHyC,aAAazC,EAAMD,YAIA,SAAC2C,GACxB,MAAM,CACFsC,YAAa,WACTtC,EAAS,CAACxC,KAAO,aAAcE,QAAQ,QAE3C6E,iBAAkB,WACdvC,EAAS,CAACxC,KAAO,kBAAmBE,QAAQ,QAEhD8E,aAAc,WACVxC,EAAS,CAACxC,KAAO,aAAcE,QAAQ,WAKpCoC,EA5Cf,YAA6E,IAA5DwC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,iBAAkBC,EAA4B,EAA5BA,aAAczC,EAAc,EAAdA,aACpDE,EAAUvB,IAChB,EAAwB+D,IAAMC,UAAS,GAAvC,mBAAON,EAAP,KAAa2B,EAAb,KACA,EAA0CtB,IAAMC,SAAS,UAAzD,mBAAOP,EAAP,KAAsB6B,EAAtB,KAUA,OACI,eAACxD,EAAA,EAAD,CAAKI,UAAWX,EAAQ2B,WAAxB,UACI,cAACqC,EAAA,EAAD,CAAKrG,MAAM,UAAUsG,aAAW,MAAMN,QAVtB,WACtBG,GAAQ,IASF,SACI,cAAC,IAAD,MAGJ,cAAC9B,EAAD,CAAWE,cAAeA,EAAeC,KAAMA,EAAMF,QAVzC,SAACrE,GACnBkG,GAAQ,GACRC,EAAiBnG,IAQgEwE,QAAS,CAACC,cAAaC,mBAAkBC,gBAAezC,aAAcA,UC7EvJoE,G,kDACF,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IAUVuF,mCAAqC,SAACC,GAClC,EAAKC,SAAS,CACV7G,eAAe,2BAAK,EAAKH,MAAMG,gBAAjB,kBAAkC4G,EAAME,OAAOC,KAAOH,EAAME,OAAOE,YAClF,WACC,EAAKC,+BAfM,EAmBnBC,iCAAmC,SAACC,EAAWC,EAAYC,GACvDD,EAAaA,GAA2BC,EAAEP,OAAO1G,MACjD,EAAKyG,SAAS,CACV7G,eAAe,2BAAI,EAAKH,MAAMG,gBAAhB,IAAgCyC,OAAO,2BAAK,EAAK5C,MAAMG,eAAeyC,QAAhC,kBAAyC0E,EAAYC,QAC1G,WACC,EAAKH,+BAxBM,EA4BnBA,yBAA2B,WACvB,EAAK7F,MAAMkG,uBAAuB,EAAKzH,MAAMG,iBA7B9B,EAgCnBuH,mBAAqB,SAACF,GAClB,EAAKR,SAAS,CACVxG,OAAO,CAACD,MAAMiH,EAAEP,OAAO1G,UAlCZ,EAsCnBoH,wBAA0B,SAACH,GACvB,EAAKR,SAAS,CACVtG,YAAY,CAACH,MAAMiH,EAAEP,OAAO1G,UAxCjB,EA4CnBqH,mBAAqB,SAAC1D,EAAMjD,EAAOuG,GAC/B3E,QAAQC,IAAIoB,GACZA,EAAK3D,MAAQiH,EAAEP,OAAO1G,MACtB,IAAIsH,EAAW,EAAK7H,MAAMW,QAC1BkH,EAAS5G,GAASiD,EAClB,EAAK8C,SAASa,IAjDC,EAoDnBC,iBAAmB,WACfjF,QAAQC,IAAI,EAAK9C,MAAMQ,QACvB,EAAKe,MAAMwG,eAAe,EAAK/H,MAAMQ,SAtDtB,EAyDnBwH,sBAAwB,WACpBnF,QAAQC,IAAI,EAAK9C,MAAMU,aACvB,EAAKa,MAAM0G,oBAAoB,EAAKjI,MAAMU,cA3D3B,EA8DnBwH,iBAAmB,SAACjH,GAChB,EAAKM,MAAM4G,eAAe,EAAKnI,MAAMW,QAAQM,IAAU,GAAIA,IA/D5C,EAkEnBmH,UAAY,SAACC,GACT,EAAKrB,SAAS,CACV7F,MAAMmH,IAAIC,gBAAgBF,KAC3B,WACC,EAAK9G,MAAMiH,cAAc,EAAKxI,MAAMmB,WAtEzB,EA0EnBsH,gBAAkB,SAACjB,GACf,IAAMa,EAAOb,EAAEP,OAAOyB,MAAM,GAC5BlB,EAAEP,OAAO1G,MAAQ,GAEjB,EAAK6H,UAAUC,IA9EA,EAkFnBM,SAAW,SAACnB,GACRA,EAAEoB,kBAnFa,EAsFnBC,UAAY,SAACrB,GACTA,EAAEoB,kBAvFa,EA0FnBE,UAAY,SAACtB,GACTA,EAAEoB,kBA3Fa,EA8FnBG,eAAiB,SAACvB,GACdA,EAAEoB,iBACF,IAAMP,EAAOb,EAAEwB,aAAaN,MAAM,GAClC,EAAKN,UAAUC,IAjGA,EAoGnBY,kBAAoB,WAChB,EAAKjC,SAAS,CACV7F,MAAM,MApGV,EAAKnB,MAAQ,CACTQ,OAAO,GACPE,YAAY,GACZC,QAAQ,GACRQ,MAAM,GACNhB,eAAe,IAPJ,E,0CA0GnB,WAAU,IAAD,SACL,OACI,sBAAKmD,UAAU,eAAf,UACI,eAACD,EAAA,EAAD,CAAMC,UAAU,uBAAhB,UACI,cAACM,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,qBAEA,cAACmF,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAU9I,MAAM,UAAU6G,QAASkC,KAAKrJ,MAAMgD,cAAesG,SAAUD,KAAKvC,mCAAmCyC,KAAKF,MAAOnC,KAAK,kBACzIsC,MAAM,mBAEV,cAACN,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAU9I,MAAM,UAAU6G,QAASkC,KAAKrJ,MAAMwD,YAAa8F,SAAUD,KAAKvC,mCAAmCyC,KAAKF,MAAOnC,KAAK,gBACvIsC,MAAM,iBAEV,cAACN,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAU9I,MAAM,UAAU6G,QAASkC,KAAKrJ,MAAMyD,cAAe6F,SAAUD,KAAKvC,mCAAmCyC,KAAKF,MAAOnC,KAAK,kBACzIsC,MAAM,mBAGV,cAACC,EAAA,EAAD,CAAWC,WAAS,EAAE1D,GAAG,eAAesD,SAAUD,KAAKhC,iCAAiCkC,KAAKF,KAAM,eAAgB,MAAOG,MAAM,QAAQ1F,QAAQ,SAAS5D,KAAK,WAC9J,cAACuJ,EAAA,EAAD,CAAWC,WAAS,EAAE1D,GAAG,eAAesD,SAAUD,KAAKhC,iCAAiCkC,KAAKF,KAAM,gBAAiB,MAAOG,MAAM,SAAS1F,QAAQ,SAAS5D,KAAK,WAEhK,cAACyJ,EAAA,EAAD,IACA,cAAC3F,EAAA,EAAD,CAAaV,UAAU,WAAvB,SACI,cAACa,EAAA,EAAD,CAAQmC,QAAS+C,KAAKjC,yBAAyBmC,KAAKF,MAAOjF,KAAK,QAAQ9D,MAAM,UAA9E,uBAGP+I,KAAK9H,MAAMkB,aAAa9B,QAEzB,sBAAK2C,UAAU,kBAAf,UACI,cAACM,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,qBADJ,UAEKsF,KAAK9H,MAAMkB,aAAa9B,eAF7B,aAEK,EAAiCsD,KAAI,SAACC,EAAMjD,GACzC,OAAO,eAAC2I,EAAA,EAAD,WACH,cAACC,EAAA,EAAD,CACIC,WAAY,cAAC,IAAD,IADhB,SAGI,cAACZ,EAAA,EAAD,CACItC,aAAW,cACXN,QAAS,SAACS,GAAD,OAAWA,EAAMgD,mBAC1BC,QAAS,SAACjD,GAAD,OAAWA,EAAMgD,mBAC1BZ,QACI,cAACM,EAAA,EAAD,CAEAQ,YAAY,cACZX,SAAU,EAAK1B,mBAAmB2B,KAAK,EAAMrF,EAAMjD,GACnDiJ,OAAO,SACPC,gBAAiB,CACTC,QAAQ,IALXnJ,OAWjB,cAACoJ,EAAA,EAAD,UACI,cAACzG,EAAA,EAAD,6IAKJ,cAAC+F,EAAA,EAAD,IACA,eAACW,EAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQmC,QAAS,EAAK/E,MAAMgJ,eAAehB,KAAK,EAAMtI,GAAQmD,KAAK,QAAQ9D,MAAM,YAAjF,oBACA,cAAC6D,EAAA,EAAD,CAAQmC,QAAS,EAAK4B,iBAAiBqB,KAAK,EAAMtI,GAAQmD,KAAK,QAAQ9D,MAAM,UAA7E,uBA9BeW,MAsC3B,cAACuJ,EAAA,EAAD,CAAYlH,UAAU,UAAUsD,aAAW,MAAMN,QAAS+C,KAAK9H,MAAMkJ,YAArE,SACI,cAAC,IAAD,SAGN,GAEDpB,KAAK9H,MAAMkB,aAAajC,OACzB,qBAAK8C,UAAU,kBAAf,SAEI,eAACsG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,WAAY,cAAC,IAAD,IADhB,SAGI,cAAClG,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,sBAGJ,cAACsG,EAAA,EAAD,UACI,cAACZ,EAAA,EAAD,CACIQ,YAAY,SACZX,SAAUD,KAAK3B,mBAAmB6B,KAAKF,MACvCa,OAAO,SACPC,gBAAiB,CACTC,QAAQ,OAIxB,cAACT,EAAA,EAAD,IACI,eAACW,EAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQmC,QAAS+C,KAAK9H,MAAMmJ,eAAgBtG,KAAK,QAAQ9D,MAAM,YAA/D,oBACA,cAAC6D,EAAA,EAAD,CAAQmC,QAAS+C,KAAKvB,iBAAkB1D,KAAK,QAAQ9D,MAAM,UAA3D,0BAGR,GAEP+I,KAAK9H,MAAMkB,aAAa/B,YACzB,qBAAK4C,UAAU,kBAAf,SACI,eAACsG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,WAAY,cAAC,IAAD,IADhB,SAGI,cAAClG,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,2BAGJ,cAACsG,EAAA,EAAD,UACI,cAACZ,EAAA,EAAD,CACIQ,YAAY,cACZX,SAAUD,KAAK1B,wBAAwB4B,KAAKF,MAC5Ca,OAAO,SACPC,gBAAiB,CACTC,QAAQ,GAEhBO,WAAS,MAGjB,cAAChB,EAAA,EAAD,IACI,eAACW,EAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQmC,QAAS+C,KAAK9H,MAAMqJ,oBAAqBxG,KAAK,QAAQ9D,MAAM,YAApE,oBACA,cAAC6D,EAAA,EAAD,CAAQmC,QAAS+C,KAAKrB,sBAAuB5D,KAAK,QAAQ9D,MAAM,UAAhE,0BAKR,GAER,qBAAKgD,UAAU,kBAAf,SACA,eAACsG,EAAA,EAAD,WACQ,cAACC,EAAA,EAAD,CACIC,WAAY,cAAC,IAAD,IADhB,SAGI,cAAClG,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,qBAGJ,eAACsG,EAAA,EAAD,CAAkB/G,UAAU,WAA5B,UACI,cAAC4F,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAU9I,MAAM,UAAU6G,QAASkC,KAAKrJ,MAAMoD,YAAakG,SAAUD,KAAKvC,mCAAmCyC,KAAKF,MAAOnC,KAAK,gBACvIsC,MAAM,iBAEV,cAACC,EAAA,EAAD,CAAWzD,GAAG,eAAesD,SAAUD,KAAKhC,iCAAiCkC,KAAKF,KAAM,aAAc,MAAOG,MAAM,QAAQ1F,QAAQ,SAAS5D,KAAK,WACjJ,cAACuJ,EAAA,EAAD,CAAWnG,UAAU,OAAO0C,GAAG,eAAesD,SAAUD,KAAKhC,iCAAiCkC,KAAKF,KAAM,cAAe,MAAOG,MAAM,SAAS1F,QAAQ,SAAS5D,KAAK,WAEpK,sBAAKoD,UAAU,iBACXuH,WAAYxB,KAAKV,SACjBmC,YAAazB,KAAKR,UAClBkC,YAAa1B,KAAKP,UAClBkC,OAAQ3B,KAAKN,eAAeQ,KAAKF,MAJrC,UAMI,uBAAO4B,OAAO,UAAU/K,KAAK,OAAO8F,GAAG,cAAckF,QAAM,EAAChE,KAAK,kBAAkBoC,SAAUD,KAAKZ,gBAAgBc,KAAKF,QACvH,uBAAO/F,UAAU,6BAA6B6H,QAAQ,cAAtD,SAAoE,kDAEpE,qBAAK7H,UAAU,eAAf,SACI,qBAAKA,UAAU,wBAI3B,cAACqG,EAAA,EAAD,IACI,eAACW,EAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQmC,QAAS+C,KAAKJ,kBAAmB7E,KAAK,QAAQ9D,MAAM,YAA5D,oBACA,cAAC6D,EAAA,EAAD,CAAQmC,QAAS+C,KAAK+B,gBAAiBhH,KAAK,QAAQ9D,MAAM,UAA1D,0BAMhB,cAAC,GAAD,W,GAxRU+K,aA0UX7I,gBA5CS,SAACxC,GACrB,MAAO,CACHyC,aAAazC,EAAMD,YAIA,SAAC2C,GACxB,MAAM,CACFsC,YAAa,WACTtC,EAAS,CAACxC,KAAO,aAAcE,QAAQ,QAE3CsK,eAAgB,WACZhI,EAAS,CAACxC,KAAO,gBAAiBE,QAAQ,QAE9C2H,eAAgB,SAAC7G,GACbwB,EAAS,CAACxC,KAAO,gBAAiBE,QAASc,KAE/C+D,iBAAkB,WACdvC,EAAS,CAACxC,KAAO,kBAAmBE,QAAQ,QAEhDwK,oBAAqB,WACjBlI,EAAS,CAACxC,KAAO,qBAAsBE,QAAQ,QAEnD6H,oBAAqB,SAAC/G,GAClBwB,EAAS,CAACxC,KAAO,qBAAsBE,QAASc,KAEpDuJ,YAAa,WACT/H,EAAS,CAACxC,KAAO,aAAcE,QAAQ,QAE3CmK,eAAgB,SAACtJ,GACbyB,EAAS,CAACxC,KAAO,gBAAiBE,QAAQa,KAE9CkH,eAAgB,SAACjH,EAAMD,GACnByB,EAAS,CAACxC,KAAO,gBAAiBE,QAAS,CAACc,OAAMD,YAEtDuH,cAAe,SAACtH,GACZwB,EAAS,CAACxC,KAAO,eAAgBE,QAASc,KAE9CuG,uBAAwB,SAACvG,GACrBwB,EAAS,CAACxC,KAAO,yBAA0BE,QAASc,QAKjDsB,CAA6CqE,IC3V7C,SAASyE,KACpB,OACI,sBAAKhI,UAAU,UAAf,UACI,cAACiI,GAAD,IAEA,qBAAKjI,UAAU,iBAAf,SACI,cAAC,EAAD,SCDhB,IAAMkI,GAAQC,YACZC,EACAC,YACEC,YAAgBC,KAChBC,OAAOC,6BAA+BD,OAAOC,+BAAiC,SAAAC,GAAC,OAAIA,KAGvFC,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,MAGFW,SAASC,eAAe,W","file":"static/js/main.de320506.chunk.js","sourcesContent":["const initialState = {\r\n\r\n};\r\n\r\nexport default function options(state = initialState, action){\r\n    if (action.type === 'REDACT_GENERAL_OPTIONS'){\r\n        state.generalOptions = action.payload\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'ADD_HEADER'){\r\n        const emptyHeader = {\r\n            color:'#000',\r\n            value:''\r\n        }\r\n\r\n        state.header = emptyHeader\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'DELETE_HEADER'){\r\n        state.header = null\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'REDACT_HEADER'){\r\n        state.header = action.payload\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'ADD_DESCRIPTION'){\r\n        const emptyDescription = {\r\n            color:'#0000008a',\r\n            value:''\r\n        }\r\n\r\n        state.description = emptyDescription\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'DELETE_DESCRIPTION'){\r\n        state.description = null\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'REDACT_DESCRIPTION'){\r\n        state.description = action.payload\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    \r\n\r\n    if (action.type === 'ADD_BUTTON'){\r\n        const emptyHeader = {\r\n            value:''\r\n        }\r\n        state.buttons ? state.buttons.push(emptyHeader) : state.buttons = [emptyHeader]\r\n        \r\n        state = Object.assign({}, state, {...state});\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'DELETE_BUTTON'){\r\n        state.buttons.splice(action.payload, 1)\r\n        if (state.buttons.length === 0){\r\n            delete state.buttons\r\n        }\r\n        else state.buttons = Object.assign([], state.buttons, [...state.buttons]);\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    \r\n    if (action.type === 'REDACT_BUTTON'){\r\n        state.buttons[action.payload.index] = action.payload.data\r\n        state = Object.assign({}, state, {...state});\r\n\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n    if (action.type === 'REDACT_IMAGE'){\r\n        state.image = action.payload\r\n        return {\r\n        ...state\r\n        };\r\n    }\r\n\r\n    return state;\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport options from './options'\r\n\r\nexport default combineReducers({\r\n    options,\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: props => ({\r\n        width: Number(props.contentWidth),\r\n        height: Number(props.contentHeight)\r\n    }),\r\n    media: props => ({\r\n        minWidth:'100%',\r\n        width: Number(props.imageWidth),\r\n        height: Number(props.imageHeight),\r\n    }), \r\n    nullifyPadding:{\r\n        padding:0\r\n    },\r\n    flex:{\r\n        display:'flex'\r\n    },\r\n    rowReverse:{\r\n        flexDirection:'row-reverse'\r\n    },\r\n    columnReverse:{\r\n        display:'flex',\r\n        flexDirection:'column-reverse'\r\n    }\r\n});\r\n\r\n\r\nfunction MainCard({optionsState}) {\r\n    const classes = useStyles(optionsState.generalOptions?.styles);\r\n    console.log(classes)\r\n    const ContentActionArea = optionsState.generalOptions?.contentActive ? CardActionArea : Box\r\n    const ImageActionArea = optionsState.generalOptions?.imageActive ? CardActionArea : Box\r\n    \r\n    return (\r\n        <Card className={classes.root}>\r\n            <ContentActionArea className={clsx(\r\n                classes.nullifyPadding,\r\n                optionsState.generalOptions?.contentFlex ? classes.flex : '',\r\n                optionsState.generalOptions?.contentInvert ? \r\n                optionsState.generalOptions?.contentFlex ? classes.rowReverse : classes.columnReverse : '',\r\n            )}>\r\n                {optionsState.image ?\r\n                    <ImageActionArea >\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={optionsState.image}\r\n                        />\r\n                    </ImageActionArea>\r\n                : ''}\r\n                <CardContent>\r\n                    {optionsState.header ?\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {optionsState.header.value}\r\n                    </Typography>\r\n                    : ''}\r\n\r\n                    {optionsState.description ?\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {optionsState.description.value}\r\n                    </Typography>\r\n                    : ''}\r\n                </CardContent>\r\n                \r\n            </ContentActionArea>\r\n            {optionsState.buttons ?\r\n                <CardActions>\r\n                    {optionsState.buttons.map((item, index)=>{\r\n                        return <Button key={index} size=\"small\" color=\"primary\">\r\n                            {item.value}\r\n                        </Button>\r\n                    })}\r\n                </CardActions>\r\n                : ''}\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        optionsState:state.options\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainCard);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nconst useStyles = makeStyles((theme) => ({\r\n    optionsFab:{\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n    }\r\n\r\n}))\r\n\r\nfunction AddDialog(props) {\r\n    const { onClose, selectedValue, open, optionsState } = props;\r\n    const {onAddHeader, onAddDescription, onAddButtons} = props.actions\r\n\r\n    const [disabledHeader, setDisabledHeader] = React.useState(false);\r\n    const [disabledDescription, setDisabledDescription] = React.useState(false);\r\n    const [disabledButtons, setDisabledButtons] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        switch (value){\r\n            case 'header':\r\n                onAddHeader()\r\n                setDisabledHeader(true)\r\n                break\r\n            case 'description':\r\n                onAddDescription()\r\n                setDisabledDescription(true)\r\n                break\r\n            case 'buttons':\r\n                onAddButtons()\r\n                setDisabledButtons(true)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        optionsState.header ? setDisabledHeader(true) : setDisabledHeader(false) \r\n        optionsState.description ? setDisabledDescription(true) : setDisabledDescription(false)\r\n        optionsState.buttons ? setDisabledButtons(true) : setDisabledButtons(false) \r\n    },[optionsState]);\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Add Component</DialogTitle>\r\n            <List>\r\n                <ListItem disabled={disabledHeader} autoFocus button onClick={() => handleListItemClick('header')}>\r\n                    <AddIcon />\r\n                    <ListItemText primary=\"Add Header\" />\r\n                </ListItem>\r\n                <ListItem disabled={disabledDescription} autoFocus button onClick={() => handleListItemClick('description')}>\r\n                    <AddIcon />\r\n                    <ListItemText primary=\"Add Description\" />\r\n                </ListItem>\r\n                <ListItem disabled={disabledButtons} autoFocus button onClick={() => handleListItemClick('buttons')}>\r\n                    <AddIcon />\r\n                    <ListItemText primary=\"Add Buttons\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction AddBtn({onAddHeader, onAddDescription, onAddButtons, optionsState}){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState('header');\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (value) => {\r\n      setOpen(false);\r\n      setSelectedValue(value);\r\n    };\r\n    return(\r\n        <Box className={classes.optionsFab}>\r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\r\n                <AddIcon />\r\n            </Fab>\r\n            \r\n            <AddDialog selectedValue={selectedValue} open={open} onClose={handleClose} actions={{onAddHeader, onAddDescription, onAddButtons}} optionsState={optionsState}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        optionsState:state.options\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddHeader: () => {\r\n            dispatch({type : 'ADD_HEADER', payload:null})\r\n        },\r\n        onAddDescription: () => {\r\n            dispatch({type : 'ADD_DESCRIPTION', payload:null})\r\n        },\r\n        onAddButtons: () => {\r\n            dispatch({type : 'ADD_BUTTON', payload:null})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBtn);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionActions  from '@material-ui/core/AccordionActions';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport './optionsSide.css'\r\nimport AddBtn from './AddBtn/AddBtn'\r\n\r\nclass optionsSide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            header:{},\r\n            description:{},\r\n            buttons:[],\r\n            image:'',\r\n            generalOptions:{}\r\n        };\r\n    }\r\n\r\n    handleGeneralOptionsCheckBoxChange = (event) =>{\r\n        this.setState({ \r\n            generalOptions: {...this.state.generalOptions, [event.target.name]: event.target.checked}\r\n        }, ()=>{\r\n            this.handleGeneralOptionsSave()\r\n        });\r\n    }\r\n\r\n    handleGeneralOptionsStylesChange = (styleName, styleValue, e) =>{\r\n        styleValue = styleValue ? styleValue : (e.target.value)\r\n        this.setState({ \r\n            generalOptions:{...this.state.generalOptions, styles: {...this.state.generalOptions.styles, [styleName]: styleValue}}\r\n        }, ()=>{\r\n            this.handleGeneralOptionsSave()\r\n        });\r\n    }\r\n\r\n    handleGeneralOptionsSave = () =>{\r\n        this.props.onChangeGeneralOptions(this.state.generalOptions)\r\n    }\r\n\r\n    handleHeaderChange = (e) =>{\r\n        this.setState({\r\n            header:{value:e.target.value}\r\n        })\r\n    }\r\n\r\n    handleDescriptionChange = (e) => {\r\n        this.setState({\r\n            description:{value:e.target.value}\r\n        })\r\n    }\r\n\r\n    handleButtonChange = (item, index, e) =>{\r\n        console.log(item)\r\n        item.value = e.target.value\r\n        let newState = this.state.buttons\r\n        newState[index] = item\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleHeaderSave = () => {\r\n        console.log(this.state.header)\r\n        this.props.onChangeHeader(this.state.header)\r\n    }\r\n\r\n    handleDescriptionSave = () => {\r\n        console.log(this.state.description)\r\n        this.props.onChangeDescription(this.state.description)\r\n    }\r\n\r\n    handleButtonSave = (index) => {\r\n        this.props.onChangeButton(this.state.buttons[index] || \"\", index)\r\n    }\r\n\r\n    loadImage = (file) =>{\r\n        this.setState({\r\n            image:URL.createObjectURL(file)\r\n        }, ()=>{\r\n            this.props.onChangeImage(this.state.image)\r\n        })\r\n    }\r\n\r\n    handleImageLoad = (e) =>{\r\n        const file = e.target.files[0];\r\n        e.target.value = ''; \r\n\r\n        this.loadImage(file)\r\n\r\n    }\r\n\r\n    dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleFileDrop = (e) => {\r\n        e.preventDefault();\r\n        const file = e.dataTransfer.files[0];\r\n        this.loadImage(file)\r\n    }\r\n\r\n    handleDeleteImage = () =>{\r\n        this.setState({\r\n            image:''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"options-side\">\r\n                <Card className=\"card-general-options\"> \r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">General</Typography>\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" checked={this.state.contentActive} onChange={this.handleGeneralOptionsCheckBoxChange.bind(this)} name=\"contentActive\" />}\r\n                        label=\"Active Content\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" checked={this.state.contentFlex} onChange={this.handleGeneralOptionsCheckBoxChange.bind(this)} name=\"contentFlex\" />}\r\n                        label=\"Flex Content\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"primary\" checked={this.state.contentInvert} onChange={this.handleGeneralOptionsCheckBoxChange.bind(this)} name=\"contentInvert\" />}\r\n                        label=\"Invert Content\"\r\n                    />\r\n\r\n                    <TextField fullWidth  id=\"filled-basic\" onChange={this.handleGeneralOptionsStylesChange.bind(this, 'contentWidth', null)} label=\"Width\" variant=\"filled\" type=\"number\" />\r\n                    <TextField fullWidth  id=\"filled-basic\" onChange={this.handleGeneralOptionsStylesChange.bind(this, 'contentHeight', null)} label=\"Height\" variant=\"filled\" type=\"number\" />\r\n\r\n                    <Divider />\r\n                    <CardActions className=\"jf-right\">\r\n                        <Button onClick={this.handleGeneralOptionsSave.bind(this)} size=\"small\" color=\"primary\">Save</Button>\r\n                    </CardActions>\r\n                </Card>\r\n                {this.props.optionsState.buttons ? \r\n\r\n                <div className=\"component-block\">\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">Buttons</Typography>\r\n                    {this.props.optionsState.buttons?.map((item, index)=>{\r\n                        return <Accordion key={index}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                            >\r\n                                <FormControlLabel\r\n                                    aria-label=\"Acknowledge\"\r\n                                    onClick={(event) => event.stopPropagation()}\r\n                                    onFocus={(event) => event.stopPropagation()}\r\n                                    control={\r\n                                        <TextField\r\n                                        key={index}\r\n                                        placeholder=\"Button Text\"\r\n                                        onChange={this.handleButtonChange.bind(this, item, index)}\r\n                                        margin=\"normal\"\r\n                                        InputLabelProps={{\r\n                                                shrink: true,\r\n                                        }}\r\n                                    />}\r\n                                />\r\n                                \r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Typography>\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n                                    sit amet blandit leo lobortis eget.\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                            <Divider />\r\n                            <AccordionActions>\r\n                                <Button onClick={this.props.onDeleteButton.bind(this, index)} size=\"small\" color=\"secondary\">Delete</Button>\r\n                                <Button onClick={this.handleButtonSave.bind(this, index)} size=\"small\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </AccordionActions>\r\n                        </Accordion>\r\n                    })}\r\n                    \r\n                    \r\n                    <IconButton className=\"add-btn\" aria-label=\"add\" onClick={this.props.onAddButton}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </div>\r\n                : ''}\r\n\r\n                {this.props.optionsState.header ? \r\n                <div className=\"component-block\">\r\n\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Header</Typography>\r\n                            \r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <TextField\r\n                                placeholder=\"Header\"\r\n                                onChange={this.handleHeaderChange.bind(this)}\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                        shrink: true,\r\n                                }}\r\n                            />\r\n                        </AccordionDetails>\r\n                        <Divider />\r\n                            <AccordionActions>\r\n                                <Button onClick={this.props.onDeleteHeader} size=\"small\" color=\"secondary\">Delete</Button>\r\n                                <Button onClick={this.handleHeaderSave} size=\"small\" color=\"primary\">Save</Button>\r\n                            </AccordionActions>\r\n                    </Accordion>\r\n                </div>: ''}\r\n\r\n                {this.props.optionsState.description ? \r\n                <div className=\"component-block\">\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Description</Typography>\r\n                            \r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <TextField\r\n                                placeholder=\"Description\"\r\n                                onChange={this.handleDescriptionChange.bind(this)}\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                        shrink: true,\r\n                                }}\r\n                                multiline\r\n                            />\r\n                        </AccordionDetails>\r\n                        <Divider />\r\n                            <AccordionActions>\r\n                                <Button onClick={this.props.onDeleteDescription} size=\"small\" color=\"secondary\">Delete</Button>\r\n                                <Button onClick={this.handleDescriptionSave} size=\"small\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </AccordionActions>\r\n                    </Accordion>\r\n                </div>: ''}\r\n                \r\n                <div className=\"component-block\">\r\n                <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                        >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">Image</Typography>\r\n                            \r\n                        </AccordionSummary>\r\n                        <AccordionDetails className=\"flex-col\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" checked={this.state.imageActive} onChange={this.handleGeneralOptionsCheckBoxChange.bind(this)} name=\"imageActive\" />}\r\n                                label=\"Active image\"\r\n                            />\r\n                            <TextField id=\"filled-basic\" onChange={this.handleGeneralOptionsStylesChange.bind(this, 'imageWidth', null)} label=\"Width\" variant=\"filled\" type=\"number\" />\r\n                            <TextField className=\"m-bt\" id=\"filled-basic\" onChange={this.handleGeneralOptionsStylesChange.bind(this, 'imageHeight', null)} label=\"Height\" variant=\"filled\" type=\"number\" />\r\n\r\n                            <div className=\"drop-container\" \r\n                                onDragOver={this.dragOver}\r\n                                onDragEnter={this.dragEnter}\r\n                                onDragLeave={this.dragLeave}\r\n                                onDrop={this.handleFileDrop.bind(this)}\r\n                            >\r\n                                <input accept=\"image/*\" type=\"file\" id=\"file-avatar\" hidden name=\"userAvatarInput\" onChange={this.handleImageLoad.bind(this)}/>\r\n                                <label className=\"file-input rounded sup-btn\" htmlFor=\"file-avatar\"><h2>Upload picture</h2></label>\r\n                        \r\n                                <div className=\"drop-message\">\r\n                                    <div className=\"upload-icon\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </AccordionDetails>\r\n                        <Divider />\r\n                            <AccordionActions>\r\n                                <Button onClick={this.handleDeleteImage} size=\"small\" color=\"secondary\">Delete</Button>\r\n                                <Button onClick={this.handleSaveImage} size=\"small\" color=\"primary\">Save</Button>\r\n                            </AccordionActions>\r\n                    </Accordion>\r\n                    \r\n                    \r\n                </div>\r\n                <AddBtn></AddBtn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        optionsState:state.options\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        onAddHeader: () => {\r\n            dispatch({type : 'ADD_HEADER', payload:null})\r\n        },\r\n        onDeleteHeader: () => {\r\n            dispatch({type : 'DELETE_HEADER', payload:null})\r\n        },\r\n        onChangeHeader: (data) => {\r\n            dispatch({type : 'REDACT_HEADER', payload: data})\r\n        },\r\n        onAddDescription: () => {\r\n            dispatch({type : 'ADD_DESCRIPTION', payload:null})\r\n        },\r\n        onDeleteDescription: () => {\r\n            dispatch({type : 'DELETE_DESCRIPTION', payload:null})\r\n        },\r\n        onChangeDescription: (data) => {\r\n            dispatch({type : 'REDACT_DESCRIPTION', payload: data})\r\n        },\r\n        onAddButton: () => {\r\n            dispatch({type : 'ADD_BUTTON', payload:null})\r\n        },\r\n        onDeleteButton: (index) => {\r\n            dispatch({type : 'DELETE_BUTTON', payload:index})\r\n        },\r\n        onChangeButton: (data, index) => {\r\n            dispatch({type : 'REDACT_BUTTON', payload: {data, index}})\r\n        },\r\n        onChangeImage: (data) => {\r\n            dispatch({type : 'REDACT_IMAGE', payload: data})\r\n        },\r\n        onChangeGeneralOptions: (data) => {\r\n            dispatch({type : 'REDACT_GENERAL_OPTIONS', payload: data})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(optionsSide);\r\n","import React from 'react';\nimport './App.css'\nimport MainCard from './components/MainCard'\nimport OptionsSide from './components/OptionsSide/OptionsSide'\n\nexport default function App() {\n    return (\n        <div className=\"wrapper\">\n            <OptionsSide></OptionsSide>\n\n            <div className=\"card-container\">\n                <MainCard></MainCard>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport reducer from './reducers/reducer'\n\nimport thunk from 'redux-thunk';\n\nimport App from './App';\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  ));   // reducer\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}